@inspect! r(3, 4) + r(3, 4)
@inspect! r(3, 4) - r(3, 4)
@inspect! r(3, 4) * r(4, 3)
@inspect! r(3, 4) / r(3, 4)

@inspect! abs.(X)
@inspect! acos.(X)
@inspect! asin.(X)
@inspect! atan.(X)
@inspect! sin.(X)
@inspect! cos.(X)
@inspect! tan.(X)
@inspect! exp.(X)
@inspect! log.(X)
@inspect! cbrt.(X)
@inspect! clamp.(X, 0.2, 0.4)
@inspect! maximum(X)
@inspect! minimum(X)
@inspect! sqrt(r(3, 3))
@inspect! sqrt.(r(3, 4))
@inspect! reduce(+, X)
@inspect! reshape(X, 4, 3)
@inspect! reverse(r(5))
@inspect! transpose(X)

@inspect! NNlib.batched_mul(r(3, 4, 5), r(4, 3))
@inspect! NNlib.batched_transpose(r(3, 4, 5))
@inspect! NNlib.batched_adjoint(r(3, 4, 5))

@inspect! NNlib.scatter(+, [10, 100, 1000], [3, 1, 2])
@inspect! NNlib.gather([1,20,300,4000], [2,4,2])
@inspect! NNlib.conv(r(10, 10, 3, 1), r(3, 3, 3, 6))
@inspect! NNlib.depthwiseconv(r(10, 10, 3, 1), r(3, 3, 3, 3))

@inspect! NNlib.maxpool(r(8, 8, 3, 1), (2,2))
@inspect! NNlib.meanpool(r(8, 8, 3, 1), (2,2))
@inspect! NNlib.softmax(rand(3, 4))